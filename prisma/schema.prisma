

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DIRECT_URL")
  extensions = [uuidOss(map: "uuid-ossp")]
}

model User {
  id        String     @id @unique
  username  String     @unique
  email     String     @unique
  create_at DateTime   @default(now())
  videos    Video[]
  likes     Like[]
  followers Follower[]
  comments  Comment[]
  chats     Chat[]
}

model Video {
  id        String    @id @default(uuid()) @db.Uuid
  title     String
  uri       String
  user_id   String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  like      Like[]
  create_at DateTime  @default(now())
  comments  Comment[]
}

model Like {
  id            String   @id @default(uuid())  @db.Uuid
  user_id       String
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  video_id      String
  video         Video    @relation(fields: [video_id], references: [id], onDelete: Cascade)
  video_user_id String
  create_at     DateTime @default(now())
}

model Follower {
  id               String   @id @default(uuid())  @db.Uuid
  user_id          String
  user             User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  follower_user_id String
  create_at        DateTime @default(now())
}

model Comment {
  id            String   @id @default(uuid())  @db.Uuid
  user_id       String
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  video_id      String
  video         Video    @relation(fields: [video_id], references: [id], onDelete: Cascade)
  video_user_id String
  text          String
  create_at     DateTime @default(now())
}

model Chat {
  id           String   @id @default(uuid()) @db.Uuid
  user_id      String
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chat_user_id String
  users_key    String
  text         String
  create_at    DateTime @default(now())
}